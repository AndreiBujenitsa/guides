# at the end of file add 'Hello World'
echo "Hello World" >> file

# create a file with three lines
cat > foo.txt
line1
line2
line3
^D

# find out what linux flavor is running
cat /proc/version


# I have a custom shell command gi. However following command will not work
find -name \*bar\* | xargs gi foo
# it will not work because shell specific command works only bash script is executed
# meaning when .bash_profile or .bashrc is execute. In order to make above code work do this
find -name \*bar\* | xargs bash -ic gi foo

# copy all the files from a particular directory to here
find /path -type f | xargs -I % cp % .
# notice that in the above case the command should have been
find /path -type f | xargs cp -I % .
# However above command will fail saying that -I is not a legal value for cp
# so the trick is to store the file name in a temporary variable called %
# variable name could be anything; it does not have to be %. following command will work too
find /path -type f | xargs -I k cp k .




# go through the command history in an easier manner
# type history
# hit Ctrl R and then type hi

# tail multiple files at the same time
tail -f log/development.log log/test.log


# truncate a running log file
cat /dev/null > some_log_file.log

# lists all variables defined in the shell
env

# get history 
history

# last command
!! 

# command number 45
!45

# clear history
history -c 

# see last 10 lines
tail -10 a.out

# see first 10 lines
head -10 a.out 

# change timestamp for all files
touch *

# STDIN  0
# STDOUT 1
# STDERR 2

# send all error messages to a file
root * 2> error.txt

# send output to a file
root * 1> out.txt

# lists all services with port number
cat /etc/services 

# update this file to resolve a hostname to an IP address
/etc/hosts 

