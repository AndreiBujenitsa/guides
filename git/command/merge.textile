h1. git merge

<pre>
git merge --squash staging        # In squashed merge all the commits from staging would appear as one 
                                  # single commit in master branch.
                                  # Note that squash merge operations leaves the changes in working 
                                  # directory. You need to commit the changes yourself.
</pre>

h2. Conflict resolution while merging

While merging if there is any conflict then following command will tell you which all committs from what branch is causing the merge conflict.

<pre>
git log --merge 
gitk --merge
</pre>

<pre>
git diff --ours foo.txt   # show the difference between our file and the merged file
git diff --theirs foo.txt # show the difference between their file and the merged file
</pre>

After fixing the merge issue just add that file

<pre>
git add foo.txt
</pre>


In the middle of merge conflict if you want to give up the whole merge then that's simple

<pre>
git reset --hard HEAD
</pre>

However if you want to revert after the merge is successful then following should be the first command after the merge

<pre>
git reset --hard MERGE_HEAD
</pre>


