h2. git stash
<pre>
git stash                                    # same as git stash save without any argument
git stash list                               # list all the stashes
git stash apply                              # applies the most recent one but leaves the 
                                             # stash as it is. stash is not dropped
git stash apply stash@{2}                    # apply the third stash in the list
git stash save 'writing test for user model' # list will have this friendly message
git stash pop                                # apply the most recent stash and drop the stash from the list
</pre>


h2. Personally I never use git stash

I learned this technique from "http://henrik.nyh.se/2009/02/git-reset-soft-as-stash-replacement-and-undo":http://henrik.nyh.se/2009/02/git-reset-soft-as-stash-replacement-and-undo . In stead of git statsh I just commit with message WIP.

<pre>
git commit -m 'WIP'
</pre>

When I come back to continue the work I see that last mesage was WIP. Then I the following and I get my changes in staged area.

<pre>
git reset --soft HEAD^
</pre>

Be very careful with the above operation. If mistakenly instead of soft you typed hard then you will loose the most recent commit.
