h1. git diff

h2. common usage

<pre>
git diff                            # diff from index
git diff --cached                   # diff between HEAD and staged
git diff HEAD                       # git diff + git diff --cached
git diff --unified=10               # by default the diff shows 2 lines above and below. 
                                    # To have 10 lines above and below use --unified option
git diff lib
git diff master~2                   # show diff between current version and master~2 version
git diff master~2 lib               # show diff for all files in lib directory

git diff --name-only                # list only the names of the file impacted in the relevant committs
git diff --name-status              # list only the name and the status of the file impacted
git diff --stat                     # show the stat of the files changed 
git diff master~10 master~3 foo.txt # show diff between two paricular points for a particular file
git diff master~3 foo.txt           # show difference between current state and the last three commits for foo.txt
</pre>

h2. What is the difference between double dot and triple dot

There is a difference between <tt>git diff master..lab</tt> and <tt>git diff master...lab</tt> . Here is an attempt to understand the difference.

Assume that there are two branches: master and lab. And this is the current status.

A - B - C - D - E (master)
         \
          \
            F - G (lab)

<pre>
git diff master..lab
</pre>

Result of above command will look at committs (D and E) and will diff that against (F and G).

The triple dot version will not even look at D and E. Triple dot version will take ( F and G) and it will diff that against common ancestor (C). 

Triple dot version is a good way to find out what all changed in a branch since it was branched off. Once again git won't even look at commit D and E in case of triple dot diff.
