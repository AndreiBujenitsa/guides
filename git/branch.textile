h2. Deleting a local branch

Let's say that you are in master branch. Create a new branch called experiment. Change someting in experiment branch and commit the change. Now come back to master branch and try to delete experiment branch.

<pre>
git branch -d experiment
</pre>

You will get following error message .

<pre>
error: The branch 'experiment' is not an ancestor of your current HEAD.
If you are sure you want to delete it, run 'git branch -D experiment'.
</pre>

The delete failed. It failed because git is telling you that if you delete experiment branch then you will some loose information. What information will be lost can be found out by asking git what commits master is missing.

Basically I am asking git tell me what commits are there in experiment branch which in not there in master branch. That can be found by following command.

<pre>
git log master..experiment --pretty=oneline
d2525457e73591bb4b8ed2a6546c978de574b00b added copyright message
</pre>

experiment branch has that 'copyright message' change which is not there in master branch.

One way to fix this issue would be to bring that commit into master. Or if you do not need that change then as git suggested pass <tt>-D</tt> option.

<pre>
git branch -D experiment
</pre>

h2. git branch 

<pre>
git branch                    # list all local branches and indicate which branch I am currently in
git branch -v                 # all branch info with last commit
git branch -a                 # list all local and remote branches
git branch -r                 # list only the remote branches ( does not include local branches)
git branch --no-merged        # list all the branches from which merge is yet to be done
git branch --merged           # list all the branches which are already merged
</pre>
